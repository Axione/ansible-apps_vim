---
- name: "Install vim"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ _vim_packages }}"

- name: "Redhat special tasks"
  ansible.builtin.import_tasks: setup-redhat.yml
  when: ansible_facts['os_family'] == 'RedHat'

- name: "Create vimrc.local file"
  ansible.builtin.template:
    src: vimrc.local.j2
    dest: /etc/vim/vimrc.local
    mode: 0644
    owner: root
    group: root

- name: "Create pathogen.vim file"
  ansible.builtin.template:
    src: pathogen.vim.j2
    dest: /etc/vim/pathogen.vim
    mode: 0644
    owner: root
    group: root

- name: "Create airline.vim file"
  ansible.builtin.template:
    src: airline.vim.j2
    dest: /etc/vim/airline.vim
    mode: 0644
    owner: root
    group: root

- name: "Ensure {{ vim_pathogen_dir }}/bundle directory exists"
  ansible.builtin.file:
    path: "{{ vim_pathogen_dir }}/bundle"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: "Deploying vim plugins from Git"
  ansible.builtin.git:
    dest: "{{ vim_pathogen_dir }}/bundle/{{ item.name }}"
    repo: "{{ item.url }}"
    clone: "yes"
    update: "yes"
    recursive: "no"
  loop: "{{ _pathogen_plugins }}"
  when:
    - vim_pathogen_dir is defined
    - item.enabled

- name: "Create individual plugin configuration file"
  ansible.builtin.template:
    src: "{{ item.name }}.vim.j2"
    dest: /etc/vim/{{ item.name }}.vim
    mode: 0644
    owner: root
    group: root
  loop: "{{ _pathogen_plugins }}"
  when:
    - vim_pathogen_dir is defined
    - item.enabled

- name: "Deploying vim cumtom plugins from Git"
  ansible.builtin.git:
    dest: "{{ vim_pathogen_dir }}/bundle/{{ item.name }}"
    repo: "{{ item.url }}"
    clone: "yes"
    update: "yes"
    recursive: "no"
  loop: "{{ vim_custom_pathogen_plugins }}"
  when:
    - vim_pathogen_dir is defined
    - item.enabled

- name: "Create individual custom plugin configuration file"
  ansible.builtin.template:
    src: "{{ item.config_file }}"
    dest: /etc/vim/{{ item.name }}.vim
    mode: 0644
    owner: root
    group: root
  loop: "{{ vim_custom_pathogen_plugins }}"
  when:
    - vim_pathogen_dir is defined
    - item.enabled
    - item.config_file is defined
